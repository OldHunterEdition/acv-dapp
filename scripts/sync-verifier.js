// scripts/sync-verifier.js
// Usage: node scripts/sync-verifier.js
const fs = require("fs");
const path = require("path");

function readJson(p) {
  return JSON.parse(fs.readFileSync(p, "utf8"));
}

async function main() {
  const artifactPath = path.resolve(__dirname, "../build/contracts/CertRegistry.json");
  const pinLatestPath = path.resolve(__dirname, "../build/pin-latest.json");
  const uiConfigPath = path.resolve(__dirname, "../verifier-ui/src/lib/autoConfig.js");

  if (!fs.existsSync(artifactPath)) {
    throw new Error("Missing Truffle artifact: build/contracts/CertRegistry.json. Run `truffle migrate` first.");
  }
  const artifact = readJson(artifactPath);

  // Pick the first network in the artifact (Ganache local)
  const networks = artifact.networks || {};
  const networkId = Object.keys(networks)[0];
  if (!networkId) throw new Error("No networks found in artifact. Did you migrate?");
  const address = networks[networkId].address;
  if (!address) throw new Error("No address in artifact networks. Did you migrate?");

  // Try to read latest pin outputs (optional)
  let pin = { cid: "", contentHash: "", certId: "" };
  if (fs.existsSync(pinLatestPath)) {
    pin = readJson(pinLatestPath);
  }

  // Guess chainId for Ganache:
  // - Ganache CLI usually 1337; GUI often 5777
  // If you know yours, hardcode it; otherwise leave 1337.
  const chainId = 1337;

  const src = `// AUTO-GENERATED by scripts/sync-verifier.js
export const AUTO_CONTRACT_ADDRESS = "${address}";
export const AUTO_CHAIN_ID = ${chainId};
export const AUTO_CERT_ID = "${pin.certId || ""}";
export const AUTO_CID = "${pin.cid || ""}";
export const AUTO_CONTENT_HASH = "${pin.contentHash || ""}";
`;
  fs.mkdirSync(path.dirname(uiConfigPath), { recursive: true });
  fs.writeFileSync(uiConfigPath, src);
  console.log("Wrote:", uiConfigPath);
  console.log({ address, chainId, certId: pin.certId });
}

main().catch((e) => {
  console.error(e);
  process.exit(1);
});
